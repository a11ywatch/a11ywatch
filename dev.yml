services:
  web:
    container_name: web
    build:
      context: ../a11ywatch-web
      dockerfile: Dockerfile.dev
    volumes:
      - ../a11ywatch-web/src:/app/src
      - ../a11ywatch-web/next.config.js:/app/next.config.js
      - ../a11ywatch-web/tailwind.config.js:/app/tailwind.config.js
      - ../a11ywatch-web/public:/app/public
    ports:
      - "3000:3000"
    environment:
      - API=${API:-http://localhost:8080/graphql}
      - WEB_SOCKET_URL=${WEB_SOCKET_URL:-ws://localhost:8080/graphql}
      - NODE_ENV=${NODE_ENV:-development}
      - STRIPE_KEY=${STRIPE_KEY_WEB}
      - INTERCOM_APPID=${INTERCOM_APPID}
      - INTERCOM_ENABLED=${INTERCOM_ENABLED}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}

  api:
    container_name: api
    build:
      context: ../a11ywatch-core
      dockerfile: Dockerfile.dev
    volumes:
      - ../a11ywatch-core/src:/usr/src/app/src
    ports:
      - "8080:8080"
      - 50051
    depends_on:
      - mongodb
    environment:
      - DB_URL=${DB_URL:-mongodb://mongodb:27017/?compressors=zlib&gssapiServiceName=mongodb}
      - DB_NAME=${DB_NAME:-a11ywatch}
      - APOLLO_GRAPH_VARIANT=${APOLLO_GRAPH_VARIANT:-current}
      - APOLLO_SCHEMA_REPORTING=${APOLLO_SCHEMA_REPORTING:-false}
      - CLIENT_URL=${CLIENT_URL:-http://localhost:3000}
      - WATCHER_CLIENT_URL=${WATCHER_CLIENT_URL:-http://crawler:8000}
      - GRAPHQL_PORT=${GRAPHQL_PORT:-8080}
      - EMAIL_SERVICE_URL=${EMAIL_SERVICE_URL}
      - EMAIL_CLIENT_ID=${EMAIL_CLIENT_ID}
      - EMAIL_CLIENT_KEY=${EMAIL_CLIENT_KEY}
      - STRIPE_KEY=${STRIPE_KEY}
      - SCRIPTS_CDN_URL=${SCRIPTS_CDN_URL:-http://localhost:8090/api}
      - PUPPET_SERVICE=${PUPPET_SERVICE:-http://pagemind:8040}
      - ROOT_URL=${ROOT_URL:-http://localhost:8080}
      - STRIPE_BASIC_PLAN=${STRIPE_BASIC_PLAN}
      - STRIPE_PREMIUM_PLAN=${STRIPE_PREMIUM_PLAN}
      - MAV_CLIENT_URL=${MAV_CLIENT_URL:-http://mav:8020}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - PUBLIC_KEY=${PUBLIC_KEY}
      - ADMIN_ORIGIN=${ADMIN_ORIGIN}
      - BACKGROUND_CRAWL=${BACKGROUND_CRAWL:-true}
      - DOCKER_ENV=true
      - SUPER_MODE=${SUPER_MODE:-true}
      - REDIS_CLIENT=${REDIS_CLIENT:-redis://redis:6379}
      - REDIS_HOST=redis

  pagemind:
    container_name: pagemind
    build:
      context: ../pagemind
      dockerfile: Dockerfile.dev
    volumes:
      - ../pagemind/src:/usr/src/app/src
    ports:
      - "8040"
      - 50052
    environment:
      - SCRIPTS_CDN_URL=${SCRIPTS_CDN_URL:-http://cdn-server:8090/api}
      - SCRIPTS_CDN_URL_HOST=${SCRIPTS_CDN_URL_HOST:-http://localhost:8090/cdn}
      - AI_SERVICE_URL=${SCRIPTS_CDN_URL:-http://mav:8020}
      - PORT=${PAGEMIND_PORT:-8040}
      - ASSETS_CDN=${ASSETS_CDN:-http://localhost:8090}

  mav:
    container_name: mav
    build:
      context: ../mav
      dockerfile: Dockerfile.dev
    volumes:
      - ../mav/src:/usr/src/app/src
    ports:
      - 8020
      - 50053
    environment:
      - MAIN_API_URL=${MAIN_API_URL:-http://api:8080}
      - PORT=${MAV_PORT:-8020}
      - DOCKER_ENV=true

  cdn-server:
    container_name: cdn-server
    build:
      context: ../elastic-cdn
      dockerfile: Dockerfile.dev
    volumes:
      - ../elastic-cdn/src:/usr/src/app/src
    ports:
      - "8090:8090"
      - 50054
    environment:
      - PORT=${ELASTIC_CDN_PORT:-8090}

  crawler:
    container_name: crawler
    build:
      context: ../crawler
      dockerfile: Dockerfile.dev
    volumes:
      - ../crawler/src:/usr/src/app/src
    ports:
      - 50055
    environment:
      - GRPC_HOST=0.0.0.0:50055

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${DB_NAME:-a11ywatch}

  mongoclient:
    container_name: mongoclient
    image: huggingface/mongoku
    ports:
      - "3100:3100"
    environment:
      - MONGOKU_DEFAULT_HOST=${HOST:-mongodb://mongodb:27017/?compressors=zlib&gssapiServiceName=mongodb}
    depends_on:
      - mongodb

  redis:
    container_name: redis
    image: redis:7.0-rc2-alpine
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  chrome:
    container_name: chromium-browser
    image: ghcr.io/drpayyne/chrome
    command:
      [
        chromium-browser,
        "--headless",
        "--disable-gpu",
        "--no-sandbox",
        "--remote-debugging-address=0.0.0.0",
        "--remote-debugging-port=9222",
        "--max-wait-for-load=2500",
        "--disable-storage-reset",
        "--disable-dev-shm-usage",
        "--disable-http2",
        "--disable-accelerated-2d-canvas",
        "--disable-setuid-sandbox",
        "--no-zygote",
        "--no-first-run",
        "--disable-features=TranslateUI,BlinkGenPropertyTrees",
      ]
    ports:
      - "9222:9222"

volumes:
  mongodb:
  logger:
